---
- name: Add Elasticsearch GPG key (Debian)
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
  when: ansible_os_family == 'Debian'

- name: Add Elasticsearch repository (Debian)
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main"
    state: present
    filename: elastic-8.x
  when: ansible_os_family == 'Debian'

- name: Add Elasticsearch GPG key (RedHat)
  rpm_key:
    key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
  when: ansible_os_family == 'RedHat'

- name: Add Elasticsearch repository (RedHat)
  yum_repository:
    name: elasticsearch-8.x
    description: Elasticsearch repository for 8.x packages
    baseurl: https://artifacts.elastic.co/packages/8.x/yum
    gpgcheck: yes
    gpgkey: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    enabled: yes
  when: ansible_os_family == 'RedHat'

- name: Install Elasticsearch
  package:
    name: "elasticsearch={{ elasticsearch_version }}"
    state: present
    update_cache: yes
  register: elasticsearch_install
  notify: restart elasticsearch

- name: Create Elasticsearch directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ elk_user }}"
    group: "{{ elk_group }}"
    mode: '0750'
  loop:
    - "{{ elasticsearch_data_dir }}"
    - "{{ elasticsearch_log_dir }}"
    - "/etc/elasticsearch"

- name: Configure Elasticsearch
  template:
    src: elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: "{{ elk_user }}"
    group: "{{ elk_group }}"
    mode: '0644'
  notify: restart elasticsearch

- name: Configure JVM options for Elasticsearch
  template:
    src: jvm.options.j2
    dest: /etc/elasticsearch/jvm.options.d/heap.options
    owner: "{{ elk_user }}"
    group: "{{ elk_group }}"
    mode: '0644'
  notify: restart elasticsearch

- name: Start Elasticsearch service
  service:
    name: elasticsearch
    state: started
    enabled: yes

- name: Wait for Elasticsearch to start
  wait_for:
    host: localhost
    port: "{{ elasticsearch_http_port }}"
    delay: 15
    timeout: 180
  register: elasticsearch_started
